// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        v3.21.12
// source: api/post.proto

package postServicePb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SearchPostRequest_Filters_SortBy int32

const (
	SearchPostRequest_Filters_SORT_BY_UNSPECIFIED SearchPostRequest_Filters_SortBy = 0
	SearchPostRequest_Filters_CREATED_TIME        SearchPostRequest_Filters_SortBy = 1
	SearchPostRequest_Filters_DEADLINE            SearchPostRequest_Filters_SortBy = 2
)

// Enum value maps for SearchPostRequest_Filters_SortBy.
var (
	SearchPostRequest_Filters_SortBy_name = map[int32]string{
		0: "SORT_BY_UNSPECIFIED",
		1: "CREATED_TIME",
		2: "DEADLINE",
	}
	SearchPostRequest_Filters_SortBy_value = map[string]int32{
		"SORT_BY_UNSPECIFIED": 0,
		"CREATED_TIME":        1,
		"DEADLINE":            2,
	}
)

func (x SearchPostRequest_Filters_SortBy) Enum() *SearchPostRequest_Filters_SortBy {
	p := new(SearchPostRequest_Filters_SortBy)
	*p = x
	return p
}

func (x SearchPostRequest_Filters_SortBy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchPostRequest_Filters_SortBy) Descriptor() protoreflect.EnumDescriptor {
	return file_api_post_proto_enumTypes[0].Descriptor()
}

func (SearchPostRequest_Filters_SortBy) Type() protoreflect.EnumType {
	return &file_api_post_proto_enumTypes[0]
}

func (x SearchPostRequest_Filters_SortBy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchPostRequest_Filters_SortBy.Descriptor instead.
func (SearchPostRequest_Filters_SortBy) EnumDescriptor() ([]byte, []int) {
	return file_api_post_proto_rawDescGZIP(), []int{2, 0, 0}
}

type LandingPost struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Image         string                 `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	FundRaised    string                 `protobuf:"bytes,4,opt,name=fund_raised,json=fundRaised,proto3" json:"fund_raised,omitempty"`
	MinimumFund   string                 `protobuf:"bytes,5,opt,name=minimum_fund,json=minimumFund,proto3" json:"minimum_fund,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LandingPost) Reset() {
	*x = LandingPost{}
	mi := &file_api_post_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LandingPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LandingPost) ProtoMessage() {}

func (x *LandingPost) ProtoReflect() protoreflect.Message {
	mi := &file_api_post_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LandingPost.ProtoReflect.Descriptor instead.
func (*LandingPost) Descriptor() ([]byte, []int) {
	return file_api_post_proto_rawDescGZIP(), []int{0}
}

func (x *LandingPost) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LandingPost) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *LandingPost) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *LandingPost) GetFundRaised() string {
	if x != nil {
		return x.FundRaised
	}
	return ""
}

func (x *LandingPost) GetMinimumFund() string {
	if x != nil {
		return x.MinimumFund
	}
	return ""
}

type LandingPostsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Posts         []*Post                `protobuf:"bytes,1,rep,name=posts,proto3" json:"posts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LandingPostsResponse) Reset() {
	*x = LandingPostsResponse{}
	mi := &file_api_post_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LandingPostsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LandingPostsResponse) ProtoMessage() {}

func (x *LandingPostsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_post_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LandingPostsResponse.ProtoReflect.Descriptor instead.
func (*LandingPostsResponse) Descriptor() ([]byte, []int) {
	return file_api_post_proto_rawDescGZIP(), []int{1}
}

func (x *LandingPostsResponse) GetPosts() []*Post {
	if x != nil {
		return x.Posts
	}
	return nil
}

type SearchPostRequest struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Title         string                     `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Page          int32                      `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Filter        *SearchPostRequest_Filters `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchPostRequest) Reset() {
	*x = SearchPostRequest{}
	mi := &file_api_post_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchPostRequest) ProtoMessage() {}

func (x *SearchPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_post_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchPostRequest.ProtoReflect.Descriptor instead.
func (*SearchPostRequest) Descriptor() ([]byte, []int) {
	return file_api_post_proto_rawDescGZIP(), []int{2}
}

func (x *SearchPostRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SearchPostRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchPostRequest) GetFilter() *SearchPostRequest_Filters {
	if x != nil {
		return x.Filter
	}
	return nil
}

type SearchPostResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Posts         []*Post                `protobuf:"bytes,1,rep,name=posts,proto3" json:"posts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchPostResponse) Reset() {
	*x = SearchPostResponse{}
	mi := &file_api_post_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchPostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchPostResponse) ProtoMessage() {}

func (x *SearchPostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_post_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchPostResponse.ProtoReflect.Descriptor instead.
func (*SearchPostResponse) Descriptor() ([]byte, []int) {
	return file_api_post_proto_rawDescGZIP(), []int{3}
}

func (x *SearchPostResponse) GetPosts() []*Post {
	if x != nil {
		return x.Posts
	}
	return nil
}

type FundOverview struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Post          *Post                  `protobuf:"bytes,1,opt,name=post,proto3" json:"post,omitempty"`
	Amount        string                 `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FundOverview) Reset() {
	*x = FundOverview{}
	mi := &file_api_post_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FundOverview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FundOverview) ProtoMessage() {}

func (x *FundOverview) ProtoReflect() protoreflect.Message {
	mi := &file_api_post_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FundOverview.ProtoReflect.Descriptor instead.
func (*FundOverview) Descriptor() ([]byte, []int) {
	return file_api_post_proto_rawDescGZIP(), []int{4}
}

func (x *FundOverview) GetPost() *Post {
	if x != nil {
		return x.Post
	}
	return nil
}

func (x *FundOverview) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type Post struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId          int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Username        string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	ProfileImageUrl string                 `protobuf:"bytes,4,opt,name=profile_image_url,json=profileImageUrl,proto3" json:"profile_image_url,omitempty"`
	Title           string                 `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Description     string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	MinimumFund     string                 `protobuf:"bytes,7,opt,name=minimum_fund,json=minimumFund,proto3" json:"minimum_fund,omitempty"`
	FundRaised      string                 `protobuf:"bytes,8,opt,name=fund_raised,json=fundRaised,proto3" json:"fund_raised,omitempty"`
	DeadlineDate    string                 `protobuf:"bytes,9,opt,name=deadline_date,json=deadlineDate,proto3" json:"deadline_date,omitempty"`
	Image           string                 `protobuf:"bytes,10,opt,name=image,proto3" json:"image,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	IsBookmarked    bool                   `protobuf:"varint,12,opt,name=is_bookmarked,json=isBookmarked,proto3" json:"is_bookmarked,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Post) Reset() {
	*x = Post{}
	mi := &file_api_post_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Post) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Post) ProtoMessage() {}

func (x *Post) ProtoReflect() protoreflect.Message {
	mi := &file_api_post_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Post.ProtoReflect.Descriptor instead.
func (*Post) Descriptor() ([]byte, []int) {
	return file_api_post_proto_rawDescGZIP(), []int{5}
}

func (x *Post) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Post) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Post) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Post) GetProfileImageUrl() string {
	if x != nil {
		return x.ProfileImageUrl
	}
	return ""
}

func (x *Post) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Post) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Post) GetMinimumFund() string {
	if x != nil {
		return x.MinimumFund
	}
	return ""
}

func (x *Post) GetFundRaised() string {
	if x != nil {
		return x.FundRaised
	}
	return ""
}

func (x *Post) GetDeadlineDate() string {
	if x != nil {
		return x.DeadlineDate
	}
	return ""
}

func (x *Post) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Post) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Post) GetIsBookmarked() bool {
	if x != nil {
		return x.IsBookmarked
	}
	return false
}

type PostDetail struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Order         int32                  `protobuf:"varint,3,opt,name=order,proto3" json:"order,omitempty"`
	Image         *string                `protobuf:"bytes,4,opt,name=image,proto3,oneof" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PostDetail) Reset() {
	*x = PostDetail{}
	mi := &file_api_post_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostDetail) ProtoMessage() {}

func (x *PostDetail) ProtoReflect() protoreflect.Message {
	mi := &file_api_post_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostDetail.ProtoReflect.Descriptor instead.
func (*PostDetail) Descriptor() ([]byte, []int) {
	return file_api_post_proto_rawDescGZIP(), []int{6}
}

func (x *PostDetail) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PostDetail) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PostDetail) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *PostDetail) GetImage() string {
	if x != nil && x.Image != nil {
		return *x.Image
	}
	return ""
}

type GetPostRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPostRequest) Reset() {
	*x = GetPostRequest{}
	mi := &file_api_post_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPostRequest) ProtoMessage() {}

func (x *GetPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_post_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPostRequest.ProtoReflect.Descriptor instead.
func (*GetPostRequest) Descriptor() ([]byte, []int) {
	return file_api_post_proto_rawDescGZIP(), []int{7}
}

func (x *GetPostRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetPostResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Post          *Post                  `protobuf:"bytes,1,opt,name=post,proto3" json:"post,omitempty"`
	PostDetails   []*PostDetail          `protobuf:"bytes,2,rep,name=post_details,json=postDetails,proto3" json:"post_details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPostResponse) Reset() {
	*x = GetPostResponse{}
	mi := &file_api_post_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPostResponse) ProtoMessage() {}

func (x *GetPostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_post_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPostResponse.ProtoReflect.Descriptor instead.
func (*GetPostResponse) Descriptor() ([]byte, []int) {
	return file_api_post_proto_rawDescGZIP(), []int{8}
}

func (x *GetPostResponse) GetPost() *Post {
	if x != nil {
		return x.Post
	}
	return nil
}

func (x *GetPostResponse) GetPostDetails() []*PostDetail {
	if x != nil {
		return x.PostDetails
	}
	return nil
}

type FundPostRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PostId        int64                  `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	Amount        string                 `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FundPostRequest) Reset() {
	*x = FundPostRequest{}
	mi := &file_api_post_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FundPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FundPostRequest) ProtoMessage() {}

func (x *FundPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_post_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FundPostRequest.ProtoReflect.Descriptor instead.
func (*FundPostRequest) Descriptor() ([]byte, []int) {
	return file_api_post_proto_rawDescGZIP(), []int{9}
}

func (x *FundPostRequest) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *FundPostRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type UserFundsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FundOverviews []*FundOverview        `protobuf:"bytes,1,rep,name=fund_overviews,json=fundOverviews,proto3" json:"fund_overviews,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserFundsResponse) Reset() {
	*x = UserFundsResponse{}
	mi := &file_api_post_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserFundsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFundsResponse) ProtoMessage() {}

func (x *UserFundsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_post_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFundsResponse.ProtoReflect.Descriptor instead.
func (*UserFundsResponse) Descriptor() ([]byte, []int) {
	return file_api_post_proto_rawDescGZIP(), []int{10}
}

func (x *UserFundsResponse) GetFundOverviews() []*FundOverview {
	if x != nil {
		return x.FundOverviews
	}
	return nil
}

type UserProjectsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Posts         []*Post                `protobuf:"bytes,1,rep,name=posts,proto3" json:"posts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserProjectsResponse) Reset() {
	*x = UserProjectsResponse{}
	mi := &file_api_post_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserProjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProjectsResponse) ProtoMessage() {}

func (x *UserProjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_post_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserProjectsResponse.ProtoReflect.Descriptor instead.
func (*UserProjectsResponse) Descriptor() ([]byte, []int) {
	return file_api_post_proto_rawDescGZIP(), []int{11}
}

func (x *UserProjectsResponse) GetPosts() []*Post {
	if x != nil {
		return x.Posts
	}
	return nil
}

type UserIDProjectsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserIDProjectsRequest) Reset() {
	*x = UserIDProjectsRequest{}
	mi := &file_api_post_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserIDProjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserIDProjectsRequest) ProtoMessage() {}

func (x *UserIDProjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_post_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserIDProjectsRequest.ProtoReflect.Descriptor instead.
func (*UserIDProjectsRequest) Descriptor() ([]byte, []int) {
	return file_api_post_proto_rawDescGZIP(), []int{12}
}

func (x *UserIDProjectsRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type BookmarkPostRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PostId        int64                  `protobuf:"varint,2,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BookmarkPostRequest) Reset() {
	*x = BookmarkPostRequest{}
	mi := &file_api_post_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BookmarkPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookmarkPostRequest) ProtoMessage() {}

func (x *BookmarkPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_post_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookmarkPostRequest.ProtoReflect.Descriptor instead.
func (*BookmarkPostRequest) Descriptor() ([]byte, []int) {
	return file_api_post_proto_rawDescGZIP(), []int{13}
}

func (x *BookmarkPostRequest) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

type UserBookmarksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Posts         []*Post                `protobuf:"bytes,1,rep,name=posts,proto3" json:"posts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserBookmarksResponse) Reset() {
	*x = UserBookmarksResponse{}
	mi := &file_api_post_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserBookmarksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBookmarksResponse) ProtoMessage() {}

func (x *UserBookmarksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_post_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBookmarksResponse.ProtoReflect.Descriptor instead.
func (*UserBookmarksResponse) Descriptor() ([]byte, []int) {
	return file_api_post_proto_rawDescGZIP(), []int{14}
}

func (x *UserBookmarksResponse) GetPosts() []*Post {
	if x != nil {
		return x.Posts
	}
	return nil
}

type SearchPostRequest_Filters struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Categories    []string                         `protobuf:"bytes,1,rep,name=categories,proto3" json:"categories,omitempty"`
	Ascending     bool                             `protobuf:"varint,2,opt,name=ascending,proto3" json:"ascending,omitempty"`
	SortBy        SearchPostRequest_Filters_SortBy `protobuf:"varint,4,opt,name=sort_by,json=sortBy,proto3,enum=IdeYarAPI.SearchPostRequest_Filters_SortBy" json:"sort_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchPostRequest_Filters) Reset() {
	*x = SearchPostRequest_Filters{}
	mi := &file_api_post_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchPostRequest_Filters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchPostRequest_Filters) ProtoMessage() {}

func (x *SearchPostRequest_Filters) ProtoReflect() protoreflect.Message {
	mi := &file_api_post_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchPostRequest_Filters.ProtoReflect.Descriptor instead.
func (*SearchPostRequest_Filters) Descriptor() ([]byte, []int) {
	return file_api_post_proto_rawDescGZIP(), []int{2, 0}
}

func (x *SearchPostRequest_Filters) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *SearchPostRequest_Filters) GetAscending() bool {
	if x != nil {
		return x.Ascending
	}
	return false
}

func (x *SearchPostRequest_Filters) GetSortBy() SearchPostRequest_Filters_SortBy {
	if x != nil {
		return x.SortBy
	}
	return SearchPostRequest_Filters_SORT_BY_UNSPECIFIED
}

var File_api_post_proto protoreflect.FileDescriptor

var file_api_post_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x09, 0x49, 0x64, 0x65, 0x59, 0x61, 0x72, 0x41, 0x50, 0x49, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8d, 0x01, 0x0a, 0x0b, 0x4c, 0x61, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x72, 0x61, 0x69, 0x73,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x61,
	0x69, 0x73, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f,
	0x66, 0x75, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x69,
	0x6d, 0x75, 0x6d, 0x46, 0x75, 0x6e, 0x64, 0x22, 0x3d, 0x0a, 0x14, 0x4c, 0x61, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x25, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x49, 0x64, 0x65, 0x59, 0x61, 0x72, 0x41, 0x50, 0x49, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52,
	0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x22, 0xce, 0x02, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x49, 0x64, 0x65, 0x59, 0x61, 0x72, 0x41,
	0x50, 0x49, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x1a, 0xd0, 0x01, 0x0a, 0x07, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x44,
	0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2b, 0x2e, 0x49, 0x64, 0x65, 0x59, 0x61, 0x72, 0x41, 0x50, 0x49, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x52, 0x06, 0x73, 0x6f,
	0x72, 0x74, 0x42, 0x79, 0x22, 0x41, 0x0a, 0x06, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x17,
	0x0a, 0x13, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x42, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x52, 0x45, 0x41, 0x54,
	0x45, 0x44, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x45, 0x41,
	0x44, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x02, 0x22, 0x3b, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a,
	0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x49,
	0x64, 0x65, 0x59, 0x61, 0x72, 0x41, 0x50, 0x49, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x05, 0x70,
	0x6f, 0x73, 0x74, 0x73, 0x22, 0x4b, 0x0a, 0x0c, 0x46, 0x75, 0x6e, 0x64, 0x4f, 0x76, 0x65, 0x72,
	0x76, 0x69, 0x65, 0x77, 0x12, 0x23, 0x0a, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x49, 0x64, 0x65, 0x59, 0x61, 0x72, 0x41, 0x50, 0x49, 0x2e, 0x50,
	0x6f, 0x73, 0x74, 0x52, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x8e, 0x03, 0x0a, 0x04, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x2a, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x66,
	0x75, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x69, 0x6d,
	0x75, 0x6d, 0x46, 0x75, 0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x72,
	0x61, 0x69, 0x73, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x75, 0x6e,
	0x64, 0x52, 0x61, 0x69, 0x73, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x61, 0x64, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x69, 0x73, 0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x64, 0x22, 0x7f, 0x0a, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19,
	0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x70, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x70, 0x6f, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x49, 0x64, 0x65, 0x59, 0x61, 0x72, 0x41,
	0x50, 0x49, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x12, 0x38, 0x0a,
	0x0c, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x49, 0x64, 0x65, 0x59, 0x61, 0x72, 0x41, 0x50, 0x49, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0b, 0x70, 0x6f, 0x73, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x42, 0x0a, 0x0f, 0x46, 0x75, 0x6e, 0x64, 0x50,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x53, 0x0a, 0x11, 0x55,
	0x73, 0x65, 0x72, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3e, 0x0a, 0x0e, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65,
	0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x49, 0x64, 0x65, 0x59, 0x61,
	0x72, 0x41, 0x50, 0x49, 0x2e, 0x46, 0x75, 0x6e, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65,
	0x77, 0x52, 0x0d, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x73,
	0x22, 0x3d, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x49, 0x64, 0x65, 0x59, 0x61, 0x72,
	0x41, 0x50, 0x49, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x22,
	0x27, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2e, 0x0a, 0x13, 0x42, 0x6f, 0x6f, 0x6b,
	0x6d, 0x61, 0x72, 0x6b, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x25, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x49, 0x64, 0x65, 0x59, 0x61, 0x72, 0x41, 0x50, 0x49, 0x2e, 0x50, 0x6f, 0x73,
	0x74, 0x52, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x32, 0xa4, 0x07, 0x0a, 0x0b, 0x50, 0x6f, 0x73,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x50,
	0x6f, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x49, 0x64, 0x65, 0x59, 0x61, 0x72, 0x41, 0x50, 0x49, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x49, 0x64, 0x65, 0x59, 0x61, 0x72, 0x41, 0x50, 0x49, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x10, 0x12, 0x0e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x12, 0x66, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x6f, 0x73, 0x74,
	0x12, 0x1c, 0x2e, 0x49, 0x64, 0x65, 0x59, 0x61, 0x72, 0x41, 0x50, 0x49, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x49, 0x64, 0x65, 0x59, 0x61, 0x72, 0x41, 0x50, 0x49, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x15, 0x3a, 0x01, 0x2a, 0x22, 0x10, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x2d, 0x70, 0x6f, 0x73, 0x74, 0x12, 0x63, 0x0a, 0x0c, 0x4c, 0x61,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x49, 0x64, 0x65, 0x59, 0x61, 0x72, 0x41, 0x50, 0x49, 0x2e, 0x4c,
	0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x6c, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2d, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x12,
	0x63, 0x0a, 0x08, 0x46, 0x75, 0x6e, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x49, 0x64,
	0x65, 0x59, 0x61, 0x72, 0x41, 0x50, 0x49, 0x2e, 0x46, 0x75, 0x6e, 0x64, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x66, 0x75, 0x6e, 0x64, 0x2d, 0x70, 0x6f, 0x73, 0x74, 0x2f, 0x7b, 0x70, 0x6f, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x7d, 0x12, 0x5a, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x46, 0x75, 0x6e, 0x64,
	0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1c, 0x2e, 0x49, 0x64, 0x65, 0x59,
	0x61, 0x72, 0x41, 0x50, 0x49, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12,
	0x0f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2d, 0x66, 0x75, 0x6e, 0x64, 0x73,
	0x12, 0x63, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x49, 0x64, 0x65, 0x59, 0x61,
	0x72, 0x41, 0x50, 0x49, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x14, 0x12, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2d, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x74, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x20, 0x2e, 0x49, 0x64, 0x65, 0x59, 0x61, 0x72,
	0x41, 0x50, 0x49, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x49, 0x64, 0x65, 0x59,
	0x61, 0x72, 0x41, 0x50, 0x49, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x19, 0x12, 0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2d, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x6a, 0x0a, 0x0c, 0x42,
	0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x49, 0x64,
	0x65, 0x59, 0x61, 0x72, 0x41, 0x50, 0x49, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b,
	0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x2f, 0x7b, 0x70,
	0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x66, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x20, 0x2e, 0x49, 0x64, 0x65, 0x59, 0x61, 0x72, 0x41, 0x50, 0x49, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x2d, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x42,
	0x18, 0x5a, 0x16, 0x2e, 0x2f, 0x2e, 0x2e, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x6f, 0x73, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_api_post_proto_rawDescOnce sync.Once
	file_api_post_proto_rawDescData = file_api_post_proto_rawDesc
)

func file_api_post_proto_rawDescGZIP() []byte {
	file_api_post_proto_rawDescOnce.Do(func() {
		file_api_post_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_post_proto_rawDescData)
	})
	return file_api_post_proto_rawDescData
}

var file_api_post_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_post_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_api_post_proto_goTypes = []any{
	(SearchPostRequest_Filters_SortBy)(0), // 0: IdeYarAPI.SearchPostRequest.Filters.SortBy
	(*LandingPost)(nil),                   // 1: IdeYarAPI.LandingPost
	(*LandingPostsResponse)(nil),          // 2: IdeYarAPI.LandingPostsResponse
	(*SearchPostRequest)(nil),             // 3: IdeYarAPI.SearchPostRequest
	(*SearchPostResponse)(nil),            // 4: IdeYarAPI.SearchPostResponse
	(*FundOverview)(nil),                  // 5: IdeYarAPI.FundOverview
	(*Post)(nil),                          // 6: IdeYarAPI.Post
	(*PostDetail)(nil),                    // 7: IdeYarAPI.PostDetail
	(*GetPostRequest)(nil),                // 8: IdeYarAPI.GetPostRequest
	(*GetPostResponse)(nil),               // 9: IdeYarAPI.GetPostResponse
	(*FundPostRequest)(nil),               // 10: IdeYarAPI.FundPostRequest
	(*UserFundsResponse)(nil),             // 11: IdeYarAPI.UserFundsResponse
	(*UserProjectsResponse)(nil),          // 12: IdeYarAPI.UserProjectsResponse
	(*UserIDProjectsRequest)(nil),         // 13: IdeYarAPI.UserIDProjectsRequest
	(*BookmarkPostRequest)(nil),           // 14: IdeYarAPI.BookmarkPostRequest
	(*UserBookmarksResponse)(nil),         // 15: IdeYarAPI.UserBookmarksResponse
	(*SearchPostRequest_Filters)(nil),     // 16: IdeYarAPI.SearchPostRequest.Filters
	(*timestamppb.Timestamp)(nil),         // 17: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                 // 18: google.protobuf.Empty
}
var file_api_post_proto_depIdxs = []int32{
	6,  // 0: IdeYarAPI.LandingPostsResponse.posts:type_name -> IdeYarAPI.Post
	16, // 1: IdeYarAPI.SearchPostRequest.filter:type_name -> IdeYarAPI.SearchPostRequest.Filters
	6,  // 2: IdeYarAPI.SearchPostResponse.posts:type_name -> IdeYarAPI.Post
	6,  // 3: IdeYarAPI.FundOverview.post:type_name -> IdeYarAPI.Post
	17, // 4: IdeYarAPI.Post.created_at:type_name -> google.protobuf.Timestamp
	6,  // 5: IdeYarAPI.GetPostResponse.post:type_name -> IdeYarAPI.Post
	7,  // 6: IdeYarAPI.GetPostResponse.post_details:type_name -> IdeYarAPI.PostDetail
	5,  // 7: IdeYarAPI.UserFundsResponse.fund_overviews:type_name -> IdeYarAPI.FundOverview
	6,  // 8: IdeYarAPI.UserProjectsResponse.posts:type_name -> IdeYarAPI.Post
	6,  // 9: IdeYarAPI.UserBookmarksResponse.posts:type_name -> IdeYarAPI.Post
	0,  // 10: IdeYarAPI.SearchPostRequest.Filters.sort_by:type_name -> IdeYarAPI.SearchPostRequest.Filters.SortBy
	8,  // 11: IdeYarAPI.PostService.GetPost:input_type -> IdeYarAPI.GetPostRequest
	3,  // 12: IdeYarAPI.PostService.SearchPost:input_type -> IdeYarAPI.SearchPostRequest
	18, // 13: IdeYarAPI.PostService.LandingPosts:input_type -> google.protobuf.Empty
	10, // 14: IdeYarAPI.PostService.FundPost:input_type -> IdeYarAPI.FundPostRequest
	18, // 15: IdeYarAPI.PostService.UserFunds:input_type -> google.protobuf.Empty
	18, // 16: IdeYarAPI.PostService.UserProjects:input_type -> google.protobuf.Empty
	13, // 17: IdeYarAPI.PostService.UserIDProjects:input_type -> IdeYarAPI.UserIDProjectsRequest
	14, // 18: IdeYarAPI.PostService.BookmarkPost:input_type -> IdeYarAPI.BookmarkPostRequest
	18, // 19: IdeYarAPI.PostService.UserBookmarks:input_type -> google.protobuf.Empty
	9,  // 20: IdeYarAPI.PostService.GetPost:output_type -> IdeYarAPI.GetPostResponse
	4,  // 21: IdeYarAPI.PostService.SearchPost:output_type -> IdeYarAPI.SearchPostResponse
	2,  // 22: IdeYarAPI.PostService.LandingPosts:output_type -> IdeYarAPI.LandingPostsResponse
	18, // 23: IdeYarAPI.PostService.FundPost:output_type -> google.protobuf.Empty
	11, // 24: IdeYarAPI.PostService.UserFunds:output_type -> IdeYarAPI.UserFundsResponse
	12, // 25: IdeYarAPI.PostService.UserProjects:output_type -> IdeYarAPI.UserProjectsResponse
	12, // 26: IdeYarAPI.PostService.UserIDProjects:output_type -> IdeYarAPI.UserProjectsResponse
	18, // 27: IdeYarAPI.PostService.BookmarkPost:output_type -> google.protobuf.Empty
	15, // 28: IdeYarAPI.PostService.UserBookmarks:output_type -> IdeYarAPI.UserBookmarksResponse
	20, // [20:29] is the sub-list for method output_type
	11, // [11:20] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_api_post_proto_init() }
func file_api_post_proto_init() {
	if File_api_post_proto != nil {
		return
	}
	file_api_post_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_post_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_post_proto_goTypes,
		DependencyIndexes: file_api_post_proto_depIdxs,
		EnumInfos:         file_api_post_proto_enumTypes,
		MessageInfos:      file_api_post_proto_msgTypes,
	}.Build()
	File_api_post_proto = out.File
	file_api_post_proto_rawDesc = nil
	file_api_post_proto_goTypes = nil
	file_api_post_proto_depIdxs = nil
}
